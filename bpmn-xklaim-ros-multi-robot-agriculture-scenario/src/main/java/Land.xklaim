import util.XklaimToRosConnection
import ros.Publisher
import messages.RosString
import messages.Twist

proc Land(String edge){

      /* write your code here */ 

	    println("Landing ...")
	
	    // Connect to the ROS bridge
	    val bridge = new XklaimToRosConnection("ws://0.0.0.0:9090")
	
	    // Initialize a publisher for the custom takeoff trigger topic
	    val pub = new Publisher("/drone_command_trigger", "std_msgs/String", bridge)
	
	    // Create and publish the land trigger message once
	    val triggerMsg = new RosString()
	    triggerMsg.setData("land")
	    pub.publish(triggerMsg)
	
	    Thread.sleep(5000); // Wait to ensure the command is processed
	    
	    val twist = new Twist()
	    pub.publish(twist)
	    
	  	println("Landed")
	  
	    out(edge)@self



      out(edge)@self
}